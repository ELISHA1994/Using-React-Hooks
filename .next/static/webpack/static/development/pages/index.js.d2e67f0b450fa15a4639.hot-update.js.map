{"version":3,"file":"static/webpack/static/development/pages/index.js.d2e67f0b450fa15a4639.hot-update.js","sources":["webpack:///./src/App.js","webpack:///./src/Speakers.js"],"sourcesContent":["import React from 'react';\nimport Home from \"./Home\";\nimport Speakers from \"./Speakers\";\n\nexport const ConfigContext = React.createContext();\n\nconst pageToShow = pageName => {\n    if (pageName === \"Home\") return <Home />;\n    if (pageName === \"Speakers\") return <Speakers />;\n    return <div>Not Found</div>;\n};\n\nconst configValue = {\n    showSpeakerSpeakingDays: true\n};\n\nconst App = ({ pageName }) => {\n    return (\n        <ConfigContext.Provider value={configValue} >\n            <div>{pageToShow(pageName)}</div>\n        </ConfigContext.Provider>\n    );\n};\n\nexport default App;\n","import React, { useState, useEffect, useContext } from \"react\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../public/static/site.css\";\nimport { Header } from \"./Header\";\nimport { Menu } from \"./Menu\";\nimport SpeakerData from \"./SpeakerData\";\nimport SpeakerDetail from \"./SpeakerDetail\";\nimport { ConfigContext} from \"./App\";\n\nconst Speakers = ({}) => {\n    const [speakingSaturday, setSpeakingSaturday] = useState(true);\n    const [speakingSunday, setSpeakingSunday] = useState(true);\n\n    const [speakerList, setSpeakerList] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n\n    const context = useContext(ConfigContext);\n\n    useEffect(() => {\n        setIsLoading(true);\n        new Promise(function(resolve) {\n            setTimeout(function() {\n                resolve();\n            }, 1000);\n        }).then(() => {\n            setIsLoading(false);\n            const speakerListServerFilter = SpeakerData.filter(({ sat, sun }) => {\n                return (speakingSaturday && sat) || (speakingSunday && sun);\n            });\n            setSpeakerList(speakerListServerFilter);\n        });\n        return () => {\n            console.log(\"cleanup\");\n        };\n    }, []); // [speakingSunday, speakingSaturday]);\n\n    const handleChangeSaturday = () => {\n        setSpeakingSaturday(!speakingSaturday);\n    };\n\n    const speakerListFiltered = isLoading\n        ? []\n        : speakerList\n            .filter(\n                ({ sat, sun }) => (speakingSaturday && sat) || (speakingSunday && sun)\n            )\n            .sort(function(a, b) {\n                if (a.firstName < b.firstName) {\n                    return -1;\n                }\n                if (a.firstName > b.firstName) {\n                    return 1;\n                }\n                return 0;\n            });\n\n    const handleChangeSunday = () => {\n        setSpeakingSunday(!speakingSunday);\n    };\n\n    const heartFavoriteHandler = (e, favoriteValue) => {\n        e.preventDefault();\n        const sessionId = parseInt(e.target.attributes[\"data-sessionid\"].value);\n        setSpeakerList(speakerList.map(item => {\n            if (item.id === sessionId) {\n                item.favorite = favoriteValue;\n                return item;\n            }\n            return item;\n        }));\n        //console.log(\"changing session favorte to \" + favoriteValue);\n    };\n\n    if (isLoading) return <div>Loading...</div>;\n\n    return (\n        <div>\n            <Header />\n            <Menu />\n            <div className=\"container\">\n                <div className=\"btn-toolbar  margintopbottom5 checkbox-bigger\">\n                    {context.showSpeakerSpeakingDays === false ? null : (\n                        <div className=\"hide\">\n                            <div className=\"form-check-inline\">\n                                <label className=\"form-check-label\">\n                                    <input\n                                        type=\"checkbox\"\n                                        className=\"form-check-input\"\n                                        onChange={handleChangeSaturday}\n                                        checked={speakingSaturday}\n                                    />\n                                    Saturday Speakers\n                                </label>\n                            </div>\n                            <div className=\"form-check-inline\">\n                                <label className=\"form-check-label\">\n                                    <input\n                                        type=\"checkbox\"\n                                        className=\"form-check-input\"\n                                        onChange={handleChangeSunday}\n                                        checked={speakingSunday}\n                                    />\n                                    Sunday Speakers\n                                </label>\n                            </div>\n                        </div>\n                    )}\n                </div>\n                <div className=\"row\">\n                    <div className=\"card-deck\">\n                        {speakerListFiltered.map(\n                            ({ id, firstName, lastName, bio, favorite }) => {\n                                return (\n                                    <SpeakerDetail\n                                        key={id}\n                                        id={id}\n                                        favorite={favorite}\n                                        onHeartFavoriteHandler={heartFavoriteHandler}\n                                        firstName={firstName}\n                                        lastName={lastName}\n                                        bio={bio}\n                                    />\n                                );\n                            }\n                        )}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Speakers;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AADA;AACA;AAGA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAMA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAOA;AACA;AACA;;;;A","sourceRoot":""}