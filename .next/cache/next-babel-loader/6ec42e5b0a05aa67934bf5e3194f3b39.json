{"ast":null,"code":"var _jsxFileName = \"/Users/elishabello/Desktop/Programming/React/nextjs_react_hooks/src/Speakers.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../static/site.css\";\nimport { Header } from \"../src/Header\";\nimport { Menu } from \"../src/Menu\";\nimport SpeakerData from \"./SpeakerData\";\nimport SpeakerDetail from \"./SpeakerDetail\";\n\nconst Speakers = ({}) => {\n  const {\n    0: speakingSaturday,\n    1: setSpeakingSaturday\n  } = useState(true);\n  const {\n    0: speakingSunday,\n    1: setSpeakingSunday\n  } = useState(true);\n  const {\n    0: speakerList,\n    1: setSpeakerList\n  } = useState([]);\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(true);\n  useEffect(() => {\n    setIsLoading(true);\n    new Promise(function (resolve) {\n      setTimeout(function () {\n        resolve();\n      }, 1000);\n    }).then(() => {\n      setIsLoading(false);\n      const speakerListServerFilter = SpeakerData.filter(({\n        sat,\n        sun\n      }) => {\n        return speakingSaturday && sat || speakingSunday && sun;\n      });\n      setSpeakerList(speakerListServerFilter);\n    });\n    return () => {\n      console.log(\"cleanup\");\n    };\n  }, []); // [speakingSunday, speakingSaturday]);\n\n  const handleChangeSaturday = () => {\n    setSpeakingSaturday(!speakingSaturday);\n  };\n\n  const speakerListFiltered = isLoading ? [] : speakerList.filter(({\n    sat,\n    sun\n  }) => speakingSaturday && sat || speakingSunday && sun).sort(function (a, b) {\n    if (a.firstName < b.firstName) {\n      return -1;\n    }\n\n    if (a.firstName > b.firstName) {\n      return 1;\n    }\n\n    return 0;\n  });\n\n  const handleChangeSunday = () => {\n    setSpeakingSunday(!speakingSunday);\n  };\n\n  const heartFavoriteHandler = (e, favoriteValue) => {\n    e.preventDefault();\n    const sessionId = parseInt(e.target.attributes[\"data-sessionid\"].value);\n    setSpeakerList(speakerList.map(item => {\n      if (item.id === sessionId) {\n        item.favorite = favoriteValue;\n        return item;\n      }\n\n      return item;\n    })); //console.log(\"changing session favorte to \" + favoriteValue);\n  };\n\n  if (isLoading) return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 27\n    }\n  }, \"Loading...\");\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, __jsx(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }), __jsx(Menu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"btn-toolbar  margintopbottom5 checkbox-bigger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"hide\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: \"form-check-inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 25\n    }\n  }, __jsx(\"label\", {\n    className: \"form-check-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 29\n    }\n  }, __jsx(\"input\", {\n    type: \"checkbox\",\n    className: \"form-check-input\",\n    onChange: handleChangeSaturday,\n    checked: speakingSaturday,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 33\n    }\n  }), \"Saturday Speakers\")), __jsx(\"div\", {\n    className: \"form-check-inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 25\n    }\n  }, __jsx(\"label\", {\n    className: \"form-check-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 29\n    }\n  }, __jsx(\"input\", {\n    type: \"checkbox\",\n    className: \"form-check-input\",\n    onChange: handleChangeSunday,\n    checked: speakingSunday,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 33\n    }\n  }), \"Sunday Speakers\")))), __jsx(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"card-deck\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 21\n    }\n  }, speakerListFiltered.map(({\n    id,\n    firstName,\n    lastName,\n    bio,\n    favorite\n  }) => {\n    return __jsx(SpeakerDetail, {\n      key: id,\n      id: id,\n      favorite: favorite,\n      onHeartFavoriteHandler: heartFavoriteHandler,\n      firstName: firstName,\n      lastName: lastName,\n      bio: bio,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 37\n      }\n    });\n  })))));\n};\n\nexport default Speakers;","map":{"version":3,"sources":["/Users/elishabello/Desktop/Programming/React/nextjs_react_hooks/src/Speakers.js"],"names":["React","useState","useEffect","Header","Menu","SpeakerData","SpeakerDetail","Speakers","speakingSaturday","setSpeakingSaturday","speakingSunday","setSpeakingSunday","speakerList","setSpeakerList","isLoading","setIsLoading","Promise","resolve","setTimeout","then","speakerListServerFilter","filter","sat","sun","console","log","handleChangeSaturday","speakerListFiltered","sort","a","b","firstName","handleChangeSunday","heartFavoriteHandler","e","favoriteValue","preventDefault","sessionId","parseInt","target","attributes","value","map","item","id","favorite","lastName","bio"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from \"react\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../static/site.css\";\nimport { Header } from \"../src/Header\";\nimport { Menu } from \"../src/Menu\";\nimport SpeakerData from \"./SpeakerData\";\nimport SpeakerDetail from \"./SpeakerDetail\";\n\nconst Speakers = ({}) => {\n    const [speakingSaturday, setSpeakingSaturday] = useState(true);\n    const [speakingSunday, setSpeakingSunday] = useState(true);\n\n    const [speakerList, setSpeakerList] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n\n    useEffect(() => {\n        setIsLoading(true);\n        new Promise(function(resolve) {\n            setTimeout(function() {\n                resolve();\n            }, 1000);\n        }).then(() => {\n            setIsLoading(false);\n            const speakerListServerFilter = SpeakerData.filter(({ sat, sun }) => {\n                return (speakingSaturday && sat) || (speakingSunday && sun);\n            });\n            setSpeakerList(speakerListServerFilter);\n        });\n        return () => {\n            console.log(\"cleanup\");\n        };\n    }, []); // [speakingSunday, speakingSaturday]);\n\n    const handleChangeSaturday = () => {\n        setSpeakingSaturday(!speakingSaturday);\n    };\n\n    const speakerListFiltered = isLoading\n        ? []\n        : speakerList\n            .filter(\n                ({ sat, sun }) => (speakingSaturday && sat) || (speakingSunday && sun)\n            )\n            .sort(function(a, b) {\n                if (a.firstName < b.firstName) {\n                    return -1;\n                }\n                if (a.firstName > b.firstName) {\n                    return 1;\n                }\n                return 0;\n            });\n\n    const handleChangeSunday = () => {\n        setSpeakingSunday(!speakingSunday);\n    };\n\n    const heartFavoriteHandler = (e, favoriteValue) => {\n        e.preventDefault();\n        const sessionId = parseInt(e.target.attributes[\"data-sessionid\"].value);\n        setSpeakerList(speakerList.map(item => {\n            if (item.id === sessionId) {\n                item.favorite = favoriteValue;\n                return item;\n            }\n            return item;\n        }));\n        //console.log(\"changing session favorte to \" + favoriteValue);\n    };\n\n    if (isLoading) return <div>Loading...</div>;\n\n    return (\n        <div>\n            <Header />\n            <Menu />\n            <div className=\"container\">\n                <div className=\"btn-toolbar  margintopbottom5 checkbox-bigger\">\n                    <div className=\"hide\">\n                        <div className=\"form-check-inline\">\n                            <label className=\"form-check-label\">\n                                <input\n                                    type=\"checkbox\"\n                                    className=\"form-check-input\"\n                                    onChange={handleChangeSaturday}\n                                    checked={speakingSaturday}\n                                />\n                                Saturday Speakers\n                            </label>\n                        </div>\n                        <div className=\"form-check-inline\">\n                            <label className=\"form-check-label\">\n                                <input\n                                    type=\"checkbox\"\n                                    className=\"form-check-input\"\n                                    onChange={handleChangeSunday}\n                                    checked={speakingSunday}\n                                />\n                                Sunday Speakers\n                            </label>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"card-deck\">\n                        {speakerListFiltered.map(\n                            ({ id, firstName, lastName, bio, favorite }) => {\n                                return (\n                                    <SpeakerDetail\n                                        key={id}\n                                        id={id}\n                                        favorite={favorite}\n                                        onHeartFavoriteHandler={heartFavoriteHandler}\n                                        firstName={firstName}\n                                        lastName={lastName}\n                                        bio={bio}\n                                    />\n                                );\n                            }\n                        )}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Speakers;\n"]},"metadata":{},"sourceType":"module"}