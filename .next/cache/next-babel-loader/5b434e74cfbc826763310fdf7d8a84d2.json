{"ast":null,"code":"var _jsxFileName = \"/Users/elishabello/Desktop/Programming/React/nextjs_react_hooks/src/ImageToggleOnScroll.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useRef, useState } from 'react';\n\nconst ImageTogglerOnScroll = ({\n  primaryImg,\n  secondaryImg\n}) => {\n  const imageRef = useRef(null);\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(true);\n  useEffect(() => {\n    window.addEventListener(\"scroll\", scrollHandler);\n    setInview(isInView());\n    setIsLoading(false);\n    return () => {\n      window.removeEventListener(\"scroll\", scrollHandler);\n    };\n  }, [isLoading]);\n  const {\n    0: inView,\n    1: setInview\n  } = useState(false);\n\n  const isInView = () => {\n    if (imageRef.current) {\n      const rect = imageRef.current.getBoundingClientRect();\n      return rect.top >= 0 && rect.bottom <= window.innerHeight;\n    }\n\n    return false;\n  };\n\n  const scrollHandler = () => {\n    setInview(() => {\n      return isInView();\n    });\n  };\n\n  return isLoading ? null : __jsx(\"img\", {\n    src: inView ? secondaryImg : primaryImg,\n    alt: \"\",\n    ref: imageRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  });\n};\n\nexport default ImageTogglerOnScroll;","map":{"version":3,"sources":["/Users/elishabello/Desktop/Programming/React/nextjs_react_hooks/src/ImageToggleOnScroll.js"],"names":["React","useEffect","useRef","useState","ImageTogglerOnScroll","primaryImg","secondaryImg","imageRef","isLoading","setIsLoading","window","addEventListener","scrollHandler","setInview","isInView","removeEventListener","inView","current","rect","getBoundingClientRect","top","bottom","innerHeight"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,MAA1B,EAAkCC,QAAlC,QAAiD,OAAjD;;AAEA,MAAMC,oBAAoB,GAAG,CAAC;AAACC,EAAAA,UAAD;AAAaC,EAAAA;AAAb,CAAD,KAAgC;AAEzD,QAAMC,QAAQ,GAAGL,MAAM,CAAC,IAAD,CAAvB;AACA,QAAM;AAAA,OAACM,SAAD;AAAA,OAAYC;AAAZ,MAA4BN,QAAQ,CAAC,IAAD,CAA1C;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCC,aAAlC;AACAC,IAAAA,SAAS,CAACC,QAAQ,EAAT,CAAT;AACAL,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACA,WAAS,MAAM;AACXC,MAAAA,MAAM,CAACK,mBAAP,CAA2B,QAA3B,EAAqCH,aAArC;AACH,KAFD;AAGH,GAPQ,EAON,CAACJ,SAAD,CAPM,CAAT;AASA,QAAM;AAAA,OAACQ,MAAD;AAAA,OAAQH;AAAR,MAAqBV,QAAQ,CAAC,KAAD,CAAnC;;AAEA,QAAMW,QAAQ,GAAG,MAAM;AACnB,QAAIP,QAAQ,CAACU,OAAb,EAAsB;AAClB,YAAMC,IAAI,GAAGX,QAAQ,CAACU,OAAT,CAAiBE,qBAAjB,EAAb;AACA,aAAOD,IAAI,CAACE,GAAL,IAAY,CAAZ,IAAiBF,IAAI,CAACG,MAAL,IAAeX,MAAM,CAACY,WAA9C;AACH;;AACD,WAAO,KAAP;AACH,GAND;;AAOA,QAAMV,aAAa,GAAG,MAAM;AACxBC,IAAAA,SAAS,CAAC,MAAM;AACZ,aAAOC,QAAQ,EAAf;AACH,KAFQ,CAAT;AAGH,GAJD;;AAMA,SAAON,SAAS,GAAG,IAAH,GACZ;AACI,IAAA,GAAG,EAAEQ,MAAM,GAAGV,YAAH,GAAkBD,UADjC;AAEI,IAAA,GAAG,EAAC,EAFR;AAEW,IAAA,GAAG,EAAEE,QAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAMH,CAnCD;;AAqCA,eAAeH,oBAAf","sourcesContent":["import React, {useEffect, useRef, useState} from 'react';\n\nconst ImageTogglerOnScroll = ({primaryImg, secondaryImg}) => {\n\n    const imageRef = useRef(null);\n    const [isLoading, setIsLoading] = useState(true)\n\n    useEffect(() => {\n        window.addEventListener(\"scroll\", scrollHandler);\n        setInview(isInView());\n        setIsLoading(false);\n        return ( () => {\n            window.removeEventListener(\"scroll\", scrollHandler);\n        });\n    }, [isLoading]);\n\n    const [inView,setInview] = useState(false);\n\n    const isInView = () => {\n        if (imageRef.current) {\n            const rect = imageRef.current.getBoundingClientRect();\n            return rect.top >= 0 && rect.bottom <= window.innerHeight;\n        }\n        return false;\n    };\n    const scrollHandler = () => {\n        setInview(() => {\n            return isInView();\n        });\n    };\n\n    return isLoading ? null :  (\n        <img\n            src={inView ? secondaryImg : primaryImg}\n            alt=\"\" ref={imageRef}\n        />\n    );\n};\n\nexport default ImageTogglerOnScroll;\n"]},"metadata":{},"sourceType":"module"}